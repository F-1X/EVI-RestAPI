// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// Handler is an autogenerated mock type for the Handler type
type Handler struct {
	mock.Mock
}

// CreateAd provides a mock function with given fields: c
func (_m *Handler) CreateAd(c *gin.Context) {
	_m.Called(c)
}

// GetAd provides a mock function with given fields: c
func (_m *Handler) GetAd(c *gin.Context) {
	_m.Called(c)
}

// GetAds provides a mock function with given fields: c
func (_m *Handler) GetAds(c *gin.Context) {
	_m.Called(c)
}

// NewHandler creates a new instance of Handler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *Handler {
	mock := &Handler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
